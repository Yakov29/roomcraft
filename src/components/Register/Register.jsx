import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { FaEye, FaEyeSlash } from "react-icons/fa"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –∏–∑ react-icons/fa
import "./Register.css";

const Register = () => {
    const navigate = useNavigate();

    const [formData, setFormData] = useState({
        name: "",
        surname: "",
        username: "",
        email: "",
        password: "",
        repeat: "",
        avatar: "",
    });

    const [isFormValid, setIsFormValid] = useState(false);
    const [showPassword, setShowPassword] = useState(false);
    const [showRepeatPassword, setShowRepeatPassword] = useState(false);
    const [message, setMessage] = useState(null);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData((prev) => ({ ...prev, [name]: value }));
    };

    const handleImageUpload = (e) => {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onloadend = () => {
                setFormData((prev) => ({ ...prev, avatar: reader.result }));
            };
            reader.readAsDataURL(file);
        }
    };

    const generateId = () => {
        return Math.floor(10000000 + Math.random() * 90000000).toString();
    };

    useEffect(() => {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        const requiredFields = ["name", "surname", "username", "email", "password", "repeat"];
        const allFilled = requiredFields.every(field => formData[field].trim() !== "");
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
        const passwordsMatch = formData.password === formData.repeat;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –ø–∞—Ä–æ–ª—è (–º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤)
        const isPasswordLongEnough = formData.password.length >= 6;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–∞—Ä–æ–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –∏ —Ü–∏—Ñ—Ä—ã
        const isPasswordEnglish = /^[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*$/.test(formData.password);

        setIsFormValid(allFilled && passwordsMatch && isPasswordLongEnough && isPasswordEnglish);
    }, [formData]);

    const handleRegister = () => {
        if (!isFormValid) {
            let errorMessage = "–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è.";
            if (formData.password !== formData.repeat) {
              errorMessage = "–ü–∞—Ä–æ–ª—ñ –ø–æ–≤–∏–Ω–Ω—ñ —Å–ø—ñ–≤–ø–∞–¥–∞—Ç–∏.";
            } else if (formData.password.length < 6) {
              errorMessage = "–ü–∞—Ä–æ–ª—å –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤.";
            } else if (!/^[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*$/.test(formData.password)) {
              errorMessage = "–ü–∞—Ä–æ–ª—å –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ —Å–∏–º–≤–æ–ª–∏.";
            }
            setMessage(errorMessage);
            return;
        }

        let finalAvatar = formData.avatar;
        if (!finalAvatar) {
            finalAvatar = "https://www.pphfoundation.ca/wp-content/uploads/2018/05/default-avatar.png";
        }

        const userProfile = {
            id: generateId(),
            name: formData.name,
            surname: formData.surname,
            username: formData.username,
            email: formData.email,
            password: formData.password,
            avatar: finalAvatar,
            rooms: []
        };

        localStorage.setItem("user", JSON.stringify(userProfile));
        navigate("/");
        document.location.reload();
    };

    const togglePasswordVisibility = () => {
        setShowPassword(!showPassword);
    };

    const toggleRepeatPasswordVisibility = () => {
        setShowRepeatPassword(!showRepeatPassword);
    };

    return (
        <section className="register">
            {message && (
                <div className="message-box">
                    <p>{message}</p>
                    <button className="message-box__close" onClick={() => setMessage(null)}>
                        &times;
                    </button>
                </div>
            )}
            <h2 className="register__title">–ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ RoomCraft —Ç–∞ –ø–æ—á–Ω–∏ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Å–≤–æ—é –∫—ñ–º–Ω–∞—Ç—É –º—Ä—ñ—ó! ü§™</h2>
            <p className="register__description">–°—Ç–≤–æ—Ä–∏ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å —ñ –æ—Ç—Ä–∏–º–∞–π –¥–æ—Å—Ç—É–ø –¥–æ —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –∫—ñ–º–Ω–∞—Ç...</p>
            <form autoComplete="off">
                <ul className="register__list">
                    <li className="register__item">
                        <p className="register__name">–Ü–º'—è <span className="required-star">*</span></p>
                        <input
                            type="text"
                            name="name"
                            className="register__input"
                            placeholder="–í–∞—à–µ —ñ–º'—è"
                            onChange={handleChange}
                            required
                            autoComplete="off"
                        />
                    </li>
                    <li className="register__item">
                        <p className="register__name">–ü—Ä—ñ–∑–≤–∏—â–µ <span className="required-star">*</span></p>
                        <input
                            type="text"
                            name="surname"
                            className="register__input"
                            placeholder="–í–∞—à–µ –ø—Ä—ñ–∑–≤–∏—â–µ"
                            onChange={handleChange}
                            required
                            autoComplete="off"
                        />
                    </li>
                    <li className="register__item">
                        <p className="register__name">–Æ–∑–µ—Ä–Ω–µ–π–º <span className="required-star">*</span></p>
                        <input
                            type="text"
                            name="username"
                            className="register__input"
                            placeholder="–í–∞—à —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —é–∑–µ—Ä–Ω–µ–π–º"
                            onChange={handleChange}
                            required
                            autoComplete="off"
                        />
                    </li>
                    <li className="register__item">
                        <p className="register__name">Email <span className="required-star">*</span></p>
                        <input
                            type="email"
                            name="email"
                            className="register__input"
                            placeholder="example@gmail.com"
                            onChange={handleChange}
                            required
                            autoComplete="off"
                        />
                    </li>
                    <li className="register__item">
                        <div className="password-wrapper">
                            <p className="register__name">–ü–∞—Ä–æ–ª—å <span className="required-star">*</span></p>
                            <input
                                type={showPassword ? "text" : "password"}
                                name="password"
                                className="register__input"
                                placeholder="–í–∞—à –ø–∞—Ä–æ–ª—å"
                                onChange={handleChange}
                                required
                                autoComplete="new-password"
                            />
                            <button
                                type="button"
                                className="password-toggle"
                                onClick={togglePasswordVisibility}
                            >
                                {showPassword ? <FaEyeSlash /> : <FaEye />}
                            </button>
                        </div>
                    </li>
                    <li className="register__item">
                        <div className="password-wrapper">
                            <p className="register__name">–ü–æ–≤—Ç–æ—Ä –ø–∞—Ä–æ–ª—é <span className="required-star">*</span></p>
                            <input
                                type={showRepeatPassword ? "text" : "password"}
                                name="repeat"
                                className="register__input"
                                placeholder="–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –ø–∞—Ä–æ–ª—å"
                                onChange={handleChange}
                                required
                                autoComplete="new-password"
                            />
                            <button
                                type="button"
                                className="password-toggle"
                                onClick={toggleRepeatPasswordVisibility}
                            >
                                {showRepeatPassword ? <FaEyeSlash /> : <FaEye />}
                            </button>
                        </div>
                    </li>
                    <li className="register__item">
                        <p className="register__name">–ê–≤–∞—Ç–∞—Ä</p>
                        <label className="avatar-upload">
                            <span className="avatar-upload__text">–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∞–≤–∞—Ç–∞—Ä</span>
                            <input
                                type="file"
                                accept="image/*"
                                className="avatar-upload__input"
                                onChange={handleImageUpload}
                                autoComplete="off"
                            />
                        </label>
                        <img
                            src={formData.avatar || "https://www.pphfoundation.ca/wp-content/uploads/2018/05/default-avatar.png"}
                            alt="avatar preview"
                            className="avatar-preview"
                        />
                    </li>
                </ul>
                <p style={{ color: "#E1E6F0", marginTop: "30px", fontSize: "1rem" }}>
                    –£—Å—ñ –ø–æ–ª—è, –ø–æ–∑–Ω–∞—á–µ–Ω—ñ *, –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è. –ü–∞—Ä–æ–ª—ñ –ø–æ–≤–∏–Ω–Ω—ñ —Å–ø—ñ–≤–ø–∞–¥–∞—Ç–∏.
                </p>
                <button
                    type="button"
                    className={`register__button ${!isFormValid ? "register__button--disabled" : ""}`}
                    onClick={handleRegister}
                >
                    –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å
                </button>
            </form>
        </section>
    );
};

export default Register;
